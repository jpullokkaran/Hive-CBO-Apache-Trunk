PREHOOK: query: create table over10k(
           t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
	   ts timestamp, 
           dec decimal(4,2),  
           bin binary)
       row format delimited
       fields terminated by '|'
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table over10k(
           t tinyint,
           si smallint,
           i int,
           b bigint,
           f float,
           d double,
           bo boolean,
           s string,
	   ts timestamp, 
           dec decimal(4,2),  
           bin binary)
       row format delimited
       fields terminated by '|'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@over10k
PREHOOK: query: load data local inpath '../../data/files/over10k' into table over10k
PREHOOK: type: LOAD
PREHOOK: Output: default@over10k
POSTHOOK: query: load data local inpath '../../data/files/over10k' into table over10k
POSTHOOK: type: LOAD
POSTHOOK: Output: default@over10k
PREHOOK: query: -- i ranges from 65536 to (65536 + 30)
-- with around 30-40 rows per value.

create table over1k as select * from over10k where i < 65536 + 30
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@over10k
POSTHOOK: query: -- i ranges from 65536 to (65536 + 30)
-- with around 30-40 rows per value.

create table over1k as select * from over10k where i < 65536 + 30
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@over10k
POSTHOOK: Output: default@over1k
PREHOOK: query: create table over500 as select * from over10k where i < 65536 + 15
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@over10k
POSTHOOK: query: create table over500 as select * from over10k where i < 65536 + 15
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@over10k
POSTHOOK: Output: default@over500
PREHOOK: query: create table over2k as select * from over10k where i < 65536 + 60
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@over10k
POSTHOOK: query: create table over2k as select * from over10k where i < 65536 + 60
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@over10k
POSTHOOK: Output: default@over2k
PREHOOK: query: create table over5k as select * from over10k where i < 65536 + 125
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@over10k
POSTHOOK: query: create table over5k as select * from over10k where i < 65536 + 125
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@over10k
POSTHOOK: Output: default@over5k
PREHOOK: query: analyze table over10k compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k
PREHOOK: Output: default@over10k
POSTHOOK: query: analyze table over10k compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k
POSTHOOK: Output: default@over10k
PREHOOK: query: analyze table over10k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k
#### A masked pattern was here ####
POSTHOOK: query: analyze table over10k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k
#### A masked pattern was here ####
PREHOOK: query: analyze table over1k compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k
PREHOOK: Output: default@over1k
POSTHOOK: query: analyze table over1k compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k
POSTHOOK: Output: default@over1k
PREHOOK: query: analyze table over1k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
PREHOOK: type: QUERY
PREHOOK: Input: default@over1k
#### A masked pattern was here ####
POSTHOOK: query: analyze table over1k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over1k
#### A masked pattern was here ####
PREHOOK: query: analyze table over500 compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@over500
PREHOOK: Output: default@over500
POSTHOOK: query: analyze table over500 compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over500
POSTHOOK: Output: default@over500
PREHOOK: query: analyze table over500 compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
PREHOOK: type: QUERY
PREHOOK: Input: default@over500
#### A masked pattern was here ####
POSTHOOK: query: analyze table over500 compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over500
#### A masked pattern was here ####
PREHOOK: query: analyze table over2k compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@over2k
PREHOOK: Output: default@over2k
POSTHOOK: query: analyze table over2k compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over2k
POSTHOOK: Output: default@over2k
PREHOOK: query: analyze table over2k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
PREHOOK: type: QUERY
PREHOOK: Input: default@over2k
#### A masked pattern was here ####
POSTHOOK: query: analyze table over2k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over2k
#### A masked pattern was here ####
PREHOOK: query: analyze table over5k compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@over5k
PREHOOK: Output: default@over5k
POSTHOOK: query: analyze table over5k compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over5k
POSTHOOK: Output: default@over5k
PREHOOK: query: analyze table over5k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
PREHOOK: type: QUERY
PREHOOK: Input: default@over5k
#### A masked pattern was here ####
POSTHOOK: query: analyze table over5k compute statistics for columns t,si,i,b,f,d,bo,s,ts,bin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over5k
#### A masked pattern was here ####
PREHOOK: query: -- 3 way join on d,f,b,i
select  r1.i, r2.i, r3.i
from over10k r1 join over5k r2 join over500 r3 
on r1.d = r2.d and r1.d = r3.d and
   r1.f = r2.f and r1.f = r3.f and
   r1.bo = r2.bo and r1.bo = r3.bo and
   r1.i = r2.i and r1.i = r3.i
where  r1.i + r2.i + r3.i = (65536) * 3
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k
PREHOOK: Input: default@over500
PREHOOK: Input: default@over5k
#### A masked pattern was here ####
POSTHOOK: query: -- 3 way join on d,f,b,i
select  r1.i, r2.i, r3.i
from over10k r1 join over5k r2 join over500 r3 
on r1.d = r2.d and r1.d = r3.d and
   r1.f = r2.f and r1.f = r3.f and
   r1.bo = r2.bo and r1.bo = r3.bo and
   r1.i = r2.i and r1.i = r3.i
where  r1.i + r2.i + r3.i = (65536) * 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k
POSTHOOK: Input: default@over500
POSTHOOK: Input: default@over5k
#### A masked pattern was here ####
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
65536	65536	65536
PREHOOK: query: -- 4 way join on compound, typecasting
select r1.i, r2.i, r3.i, r4.i
from over10k r1 join over5k r2 join over500 r3 join over2k r4 
on r1.f = r2.f and r1.d = r3.d and r2.s = r4.s and round(r1.f) = round(r4.f)
where r1.i + r2.i + r3.i + r4.i < (65536 + 10) * 4
PREHOOK: type: QUERY
PREHOOK: Input: default@over10k
PREHOOK: Input: default@over2k
PREHOOK: Input: default@over500
PREHOOK: Input: default@over5k
#### A masked pattern was here ####
POSTHOOK: query: -- 4 way join on compound, typecasting
select r1.i, r2.i, r3.i, r4.i
from over10k r1 join over5k r2 join over500 r3 join over2k r4 
on r1.f = r2.f and r1.d = r3.d and r2.s = r4.s and round(r1.f) = round(r4.f)
where r1.i + r2.i + r3.i + r4.i < (65536 + 10) * 4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@over10k
POSTHOOK: Input: default@over2k
POSTHOOK: Input: default@over500
POSTHOOK: Input: default@over5k
#### A masked pattern was here ####
65545	65545	65545	65545
65545	65545	65545	65545
65538	65547	65538	65547
65544	65544	65544	65544
65544	65544	65544	65544
65544	65544	65544	65537
65537	65537	65537	65544
65537	65537	65537	65537
65545	65545	65545	65545
65543	65543	65543	65543
65536	65536	65536	65536
65545	65545	65545	65545
65538	65538	65538	65538
65545	65545	65545	65545
65538	65538	65538	65538
65540	65540	65540	65540
65541	65541	65541	65541
65539	65539	65539	65539
65538	65538	65538	65538
65536	65536	65536	65536
65543	65543	65544	65543
65543	65543	65543	65543
65541	65541	65541	65541
65537	65537	65537	65537
65541	65541	65541	65541
65546	65545	65546	65545
65545	65545	65545	65545
65536	65536	65536	65536
65539	65536	65546	65536
65539	65536	65539	65536
65544	65544	65544	65544
65543	65543	65543	65543
65543	65543	65543	65543
65545	65545	65545	65545
65538	65538	65538	65538
65537	65537	65537	65537
65543	65543	65543	65543
65541	65541	65541	65541
65542	65542	65542	65542
65543	65543	65543	65543
65541	65541	65541	65541
65544	65544	65543	65544
65544	65544	65544	65544
65541	65541	65541	65541
65544	65544	65544	65544
65544	65544	65544	65544
65536	65536	65536	65536
65540	65540	65540	65540
65536	65553	65536	65553
65540	65540	65540	65540
65545	65545	65545	65545
65545	65546	65545	65546
65540	65540	65540	65540
65539	65539	65539	65539
65536	65536	65536	65536
65545	65545	65545	65545
65541	65541	65541	65536
65541	65541	65541	65541
65536	65536	65536	65536
65536	65536	65536	65541
65536	65536	65536	65536
65536	65536	65536	65536
65539	65539	65539	65539
65545	65545	65545	65545
65544	65547	65544	65547
65539	65539	65550	65539
65539	65539	65539	65539
65537	65537	65537	65537
65539	65539	65539	65539
65536	65536	65540	65536
65536	65536	65536	65536
65544	65544	65544	65544
65536	65536	65536	65536
65542	65542	65542	65542
65543	65543	65543	65543
65543	65543	65543	65543
65536	65536	65549	65536
65536	65536	65536	65536
65540	65540	65540	65540
65537	65537	65537	65537
65540	65540	65540	65540
65544	65544	65544	65544
65540	65540	65540	65540
65540	65540	65547	65540
65541	65541	65541	65541
65537	65537	65537	65537
65543	65543	65543	65543
65536	65536	65536	65536
65536	65536	65536	65536
65542	65542	65542	65542
65545	65545	65545	65545
65544	65544	65547	65544
65544	65544	65544	65544
65545	65545	65545	65545
65543	65543	65543	65543
65537	65537	65537	65537
65543	65543	65543	65543
65536	65536	65536	65536
65540	65540	65540	65540
65537	65537	65537	65537
65537	65537	65536	65537
65538	65538	65538	65538
65544	65544	65544	65544
65538	65538	65538	65538
65538	65538	65538	65545
65545	65545	65545	65538
65545	65545	65545	65545
65543	65543	65543	65543
65544	65544	65544	65544
65546	65544	65546	65544
65544	65544	65544	65544
65545	65545	65545	65545
65536	65536	65536	65536
65543	65543	65543	65543
65545	65545	65545	65545
65540	65540	65537	65540
65540	65540	65540	65540
65538	65538	65538	65538
65542	65542	65542	65542
65540	65540	65540	65540
65538	65538	65538	65538
65549	65549	65536	65549
65541	65541	65541	65541
65537	65537	65537	65537
65545	65545	65545	65545
65548	65548	65537	65548
65539	65539	65539	65539
65537	65537	65537	65537
65559	65537	65543	65537
65538	65538	65538	65538
65536	65536	65536	65536
65544	65544	65544	65544
65544	65544	65544	65544
65544	65544	65544	65544
65542	65542	65542	65542
65542	65542	65542	65542
65540	65540	65540	65540
65536	65536	65536	65536
65544	65544	65544	65544
65544	65544	65544	65544
65544	65544	65544	65544
65543	65543	65543	65543
65544	65544	65537	65544
65544	65544	65544	65544
65542	65542	65542	65542
65537	65537	65537	65537
65537	65537	65550	65537
65540	65540	65540	65540
65546	65546	65542	65546
65541	65541	65541	65541
65544	65544	65544	65544
65541	65541	65541	65541
65540	65540	65540	65540
65542	65542	65542	65542
65544	65544	65544	65544
65542	65542	65542	65542
65542	65542	65542	65553
65536	65547	65536	65547
65544	65546	65544	65546
65536	65536	65536	65536
65541	65541	65541	65541
65545	65545	65545	65545
65541	65541	65541	65541
65538	65538	65538	65538
65537	65537	65537	65537
65542	65542	65542	65542
65537	65537	65537	65537
65539	65539	65539	65539
65539	65539	65539	65539
65536	65536	65536	65536
65543	65543	65543	65543
65538	65538	65538	65538
65541	65541	65541	65541
65538	65538	65538	65538
65539	65539	65539	65539
65544	65544	65544	65544
65545	65545	65545	65545
65537	65537	65537	65537
65539	65539	65539	65539
65543	65543	65543	65543
65538	65538	65538	65538
65542	65542	65542	65542
65540	65540	65540	65540
65541	65540	65541	65540
65538	65538	65538	65538
65551	65543	65545	65543
65543	65543	65543	65543
65537	65537	65537	65537
65544	65544	65544	65544
65537	65537	65536	65537
65537	65537	65537	65537
65543	65543	65543	65543
65539	65539	65539	65539
65536	65536	65536	65536
65539	65539	65539	65539
65537	65539	65537	65539
65539	65539	65539	65539
65536	65536	65536	65536
65545	65545	65545	65545
65542	65542	65542	65542
65545	65545	65536	65545
65545	65545	65545	65545
65537	65537	65537	65537
65537	65537	65537	65537
65536	65536	65536	65536
65543	65543	65543	65543
65541	65541	65541	65541
65540	65540	65540	65540
65538	65538	65538	65538
65541	65541	65541	65541
65536	65536	65536	65536
65537	65537	65537	65537
65539	65539	65539	65539
65536	65536	65536	65536
65545	65545	65545	65545
65536	65536	65536	65536
65539	65539	65539	65539
65541	65541	65541	65541
65544	65544	65544	65544
65541	65541	65541	65541
65536	65536	65536	65536
65547	65536	65547	65536
65541	65541	65548	65541
65541	65541	65541	65541
65541	65541	65541	65541
65537	65537	65537	65537
65536	65536	65536	65536
65542	65542	65542	65542
65538	65538	65538	65538
65545	65545	65545	65545
65541	65541	65541	65541
65536	65536	65536	65536
65541	65541	65541	65541
65540	65541	65540	65541
65543	65543	65543	65543
65544	65544	65544	65544
65543	65543	65543	65543
65542	65542	65546	65542
65542	65542	65542	65542
65542	65542	65547	65542
65543	65543	65543	65543
65541	65541	65541	65541
65541	65541	65550	65541
65539	65539	65539	65539
65541	65541	65541	65541
65545	65545	65545	65545
65537	65537	65537	65537
65536	65536	65536	65536
65542	65542	65542	65542
65536	65536	65536	65536
65538	65538	65538	65538
65541	65541	65541	65541
65541	65541	65541	65541
65536	65536	65536	65536
65545	65545	65545	65545
65539	65539	65539	65539
65538	65538	65538	65538
65539	65539	65539	65539
65542	65542	65542	65542
65541	65541	65541	65541
65538	65538	65538	65538
65547	65538	65547	65538
65541	65541	65541	65541
65541	65541	65541	65541
65543	65543	65543	65543
65543	65543	65543	65543
65543	65543	65543	65543
65544	65544	65544	65544
65536	65536	65536	65536
65544	65544	65544	65544
65542	65542	65542	65542
65543	65543	65543	65543
65545	65545	65545	65545
65536	65536	65536	65536
65539	65539	65539	65539
65536	65539	65536	65539
65539	65539	65546	65539
65542	65542	65542	65542
65545	65545	65545	65545
65544	65544	65544	65544
65540	65540	65540	65540
65544	65544	65544	65544
65542	65542	65542	65542
65542	65542	65542	65542
65536	65536	65536	65536
65538	65538	65538	65538
65543	65543	65543	65543
65540	65540	65540	65540
65544	65544	65544	65544
65537	65537	65537	65537
65540	65540	65540	65540
65537	65537	65537	65537
65538	65538	65538	65538
65545	65545	65545	65545
65536	65536	65536	65536
65538	65538	65538	65538
65536	65536	65536	65536
65543	65543	65543	65543
65550	65543	65545	65543
65541	65541	65541	65541
65545	65545	65545	65545
65539	65539	65539	65539
65540	65540	65540	65540
65544	65544	65544	65544
65543	65543	65543	65543
65540	65540	65536	65540
65540	65540	65540	65540
65542	65542	65542	65542
65536	65536	65536	65536
65536	65536	65545	65536
65542	65542	65542	65542
65539	65539	65539	65539
65538	65538	65538	65538
65540	65540	65540	65540
65536	65536	65536	65536
65544	65544	65544	65544
65542	65542	65542	65542
65544	65544	65544	65544
65547	65544	65547	65544
65538	65538	65538	65538
65543	65543	65543	65543
65537	65537	65537	65537
65545	65545	65545	65545
65543	65543	65543	65543
65543	65543	65542	65543
65542	65542	65542	65542
65546	65546	65539	65546
65536	65536	65536	65536
65540	65540	65540	65540
65540	65540	65540	65540
65538	65538	65538	65538
65547	65547	65540	65547
65545	65545	65545	65545
65541	65541	65541	65541
65543	65543	65543	65543
65541	65541	65541	65541
65538	65538	65538	65538
65544	65544	65544	65544
65544	65544	65544	65544
65543	65543	65543	65543
65543	65543	65543	65543
65551	65543	65541	65543
65542	65542	65542	65542
65542	65542	65542	65542
65536	65536	65536	65536
65544	65544	65544	65544
65544	65544	65544	65544
65541	65541	65541	65541
65541	65541	65548	65541
65543	65543	65543	65543
65543	65543	65543	65543
65542	65542	65542	65542
65537	65537	65537	65537
65544	65544	65544	65544
65545	65545	65545	65545
65547	65547	65542	65547
65537	65537	65537	65537
65540	65540	65540	65540
65541	65541	65541	65541
65542	65542	65542	65542
65536	65536	65536	65536
65545	65545	65545	65545
65537	65537	65537	65537
65541	65541	65541	65541
65545	65545	65545	65545
65542	65542	65542	65542
65542	65542	65542	65542
65544	65544	65544	65544
65544	65544	65544	65544
65542	65542	65542	65542
65542	65542	65543	65542
65541	65541	65541	65541
65542	65542	65542	65542
65536	65536	65536	65536
65538	65538	65538	65538
65541	65541	65541	65541
65544	65544	65544	65544
65541	65541	65541	65541
65541	65541	65541	65541
65542	65542	65542	65542
65541	65541	65541	65541
65545	65545	65545	65545
65540	65540	65540	65540
65542	65542	65542	65542
65545	65545	65545	65545
65543	65543	65543	65543
65540	65540	65540	65540
65539	65539	65539	65539
65537	65537	65540	65537
65537	65537	65537	65537
65541	65541	65541	65541
65540	65540	65540	65540
65538	65538	65538	65538
65543	65543	65543	65543
65536	65536	65536	65536
65536	65536	65537	65536
65537	65537	65537	65566
65537	65537	65537	65537
65541	65541	65541	65541
65537	65537	65537	65537
65544	65544	65544	65544
65543	65543	65543	65543
65545	65545	65545	65545
65545	65545	65545	65545
65545	65545	65545	65545
65537	65537	65537	65537
65539	65537	65539	65537
65542	65542	65542	65542
65540	65540	65540	65540
65536	65536	65537	65536
65536	65536	65536	65536
65540	65540	65540	65540
65542	65542	65542	65542
65537	65537	65537	65537
65541	65541	65541	65541
65544	65544	65544	65544
65536	65536	65536	65536
65542	65542	65542	65542
65542	65542	65549	65542
65539	65539	65539	65539
65539	65539	65539	65539
65542	65542	65542	65542
65537	65537	65548	65537
65537	65537	65537	65537
65537	65537	65537	65537
65537	65537	65544	65537
65537	65537	65537	65537
65544	65544	65544	65544
65538	65538	65538	65538
65545	65545	65545	65545
65542	65542	65542	65542
65543	65543	65543	65543
